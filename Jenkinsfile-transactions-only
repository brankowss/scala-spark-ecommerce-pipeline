// Jenkinsfile-transactions-only
// This pipeline runs periodically (e.g., every 4 hours)
// and is responsible for generating and ingesting new transaction data
// into the Bronze layer of the data pipeline.

pipeline {
    agent any

    stages {

        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Generate & Upload Transactions') {
            steps {
                // Generate new batch of transaction data
                sh 'timeout 1m python3 scripts/data_generator.py --type transactions || true'

                // Upload the generated data to HDFS
                sh '''
                    echo "--- Uploading new transaction files to HDFS ---"
                    docker exec namenode hdfs dfs -mkdir -p /user/spark/raw_transactions

                    # Loop through all generated transaction files and upload them to HDFS
                    for f in generated_data/invoice_*.txt; do
                        if [ -f "$f" ]; then
                            filename=$(basename "$f")
                            cat "$f" | docker exec -i namenode hdfs dfs -put -f - "/user/spark/raw_transactions/$filename"
                        fi
                    done
                '''
            }
        }

        stage('Process Transactions (Bronze Layer)') {
            steps {
                // Run Spark job to process transactions
                sh '''
                    echo "--- Running Spark job: IngestTransactions ---"
                    docker exec spark-master bash -c '
                        /opt/spark/bin/spark-submit \
                            --class IngestTransactions \
                            --master spark://spark-master:7077 \
                            /opt/spark/apps/target/scala-2.12/ecommerce-pipeline-spark-jobs_2.12-1.0.jar
                    '
                '''
            }
        }
    }

    post {
        // Send email notification only on failure
        failure {
            script {
                echo "Sending failure notification email..."
                mail to: env.NOTIFICATION_EMAIL,
                    subject: "‚ùå FAILURE: 4-hourly Transaction Ingestion Pipeline",
                    body: "The 4-hourly transaction ingestion pipeline failed. Check logs here: ${env.BUILD_URL}"
            }
        }
    }
}
